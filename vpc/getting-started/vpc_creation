#! /usr/bin/env bash

set -e

# Creating a VPC
VPC_ID=$(aws ec2 create-vpc --cidr-block "172.1.0.0/16" --region ap-south-1 \
--tag-specifications 'ResourceType=vpc,Tags=[{Key=Name,Value=cli-sany-vpc}]' \
--query Vpc.VpcId)

echo "VPC_ID: $VPC_ID"

# Turning on DNS Hostnames
aws ec2 modify-vpc-attribute --vpc-id $VPC_ID --enable-dns-hostnames "{\"Value\":true}"

# Creating an IGW
IGW_ID=$(aws ec2 create-internet-gateway \
--tag-specifications 'ResourceType=internet-gateway,Tags=[{Key=Name,Value=cli-sany-igw}]' \
--region ap-south-1 \
--query InternetGateway.InternetGatewayId)

echo "IGW_ID: $IGW_ID"

# Attaching the IGW
aws ec2 attach-internet-gateway \
--vpc-id $VPC_ID \
--internet-gateway-id $IGW_ID \
--region ap-south-1

# Creating a new subnet
SUBNET_ID=$(aws ec2 create-subnet --vpc-id $VPC_ID \
--cidr-block "172.1.0.0/20" \
--query Subnet.SubnetId)

# Auto assigning IPv4 addresses
aws ec2 modify-subnet-attribute --subnet-id $SUBNET_ID --map-public-ip-on-launch

# Explicitly associating the subnet
ROUTE_TABLE_ID=$(aws ec2 describe-route-tables \
--filters "Name=vpc-id,Values=$VPC_ID" \
--query "RouteTables[].RouteTableId[]")

echo "ROUTE_TABLE_ID: $ROUTE_TABLE_ID"

ASSOCIATE_ID=$(aws ec2 associate-route-table \
--route-table-id $ROUTE_TABLE_ID --subnet-id $SUBNET_ID \
--query AssociationId)

echo "ASSOCIATE_ID: $ASSOCIATE_ID"

# Adding a route table for the IGW
aws ec2 create-route --route-table-id $ROUTE_TABLE_ID --destination-cidr-block 0.0.0.0/0 --gateway-id $IGW_ID

# Printing out delete command
echo "./vpc_deletion $VPC_ID $IGW_ID $SUBNET_ID $ASSOCIATE_ID $ROUTE_TABLE_ID"